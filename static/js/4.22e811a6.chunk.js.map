{"version":3,"sources":["components/TableItem.jsx","containers/MainGenre.jsx"],"names":["TableItem","props","music","useSelector","state","selectMusic","id","authors","name","duration","date","useState","play","setPlay","currentMusic","setCurrentMusic","dispatch","useDispatch","useEffect","className","style","color","fontSize","onMouseEnter","onMouseLeave","role","class","onClick","type","SET_MUSIC","payload","src","width","borderRadius","height","Array","isArray","length","map","aut","index","to","slug","textTransform","today","Date","release","diffTime","Math","abs","ceil","getReleaseTime","sec_num","parseInt","hours","floor","minutes","seconds","getDurationTime","MainGenre","useParams","genre","setGenre","songs","setSongs","isLoading","setIsLoading","window","scrollTo","top","behavior","get_genre","then","result","filt","get_songs","res","results","letterSpacing","fontWeight","borderBottom","song","song_file","created","singers"],"mappings":"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","file":"static/js/4.22e811a6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { selectMusic } from \"../redux/selectors/music\";\nimport { SET_MUSIC } from \"../redux/types/types\";\n\nfunction TableItem(props) {\n    const music = useSelector((state) => selectMusic(state));\n    const { id, authors, name, duration, date } = props;\n    const [play, setPlay] = useState(false);\n    const [currentMusic, setCurrentMusic] = useState(false);\n    const getReleaseTime = () => {\n        let today = new Date();\n        let release = new Date(date);\n        const diffTime = Math.abs(today - release);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays;\n    };\n    const getDurationTime = () => {\n        var sec_num = parseInt(duration, 10); // don't forget the second param\n        var hours = Math.floor(sec_num / 3600);\n        var minutes = Math.floor((sec_num - hours * 3600) / 60);\n        var seconds = sec_num - hours * 3600 - minutes * 60;\n\n        if (minutes < 10) {\n            minutes = \"0\" + minutes;\n        }\n        if (seconds < 10) {\n            seconds = \"0\" + seconds;\n        }\n        return minutes + \":\" + seconds;\n    };\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (music?.id === id) {\n            setCurrentMusic(true);\n        } else {\n            setCurrentMusic(false);\n        }\n    }, [music]);\n    return (\n        <div\n            className=\"row pb-2 mb-2 pt-2 align-items-center btn-nav\"\n            style={{\n                color: \"#b3b3b3\",\n                fontSize: \"14px\",\n            }}\n        >\n            <div\n                onMouseEnter={() => setPlay(true)}\n                onMouseLeave={() => setPlay(false)}\n                className=\"col-1 ps-3 fs-6 d-flex justify-content-center play-btn\"\n                role=\"button\"\n            >\n                {currentMusic ? (\n                    <i\n                        role=\"button\"\n                        // onClick={pause}\n                        class=\"bi bi-pause-circle-fill fs-5\"\n                    ></i>\n                ) : play ? (\n                    <i\n                        class=\"bi bi-play-circle-fill\"\n                        onClick={() => {\n                            dispatch({ type: SET_MUSIC, payload: props });\n                        }}\n                    ></i>\n                ) : (\n                    <i class=\"bi bi-play-fill\"></i>\n                )}\n            </div>\n            <div className=\"col d-flex justify-content-start align-items-center \">\n                <img\n                    src=\"https://i.scdn.co/image/ab67616d00004851c5909eb7b91b1e9a0a3a74bf\"\n                    style={{\n                        width: \"40px\",\n                        borderRadius: \"3px\",\n                        height: \"40px\",\n                    }}\n                />\n                <div className=\"d-flex ms-3 flex-column justify-content-between \">\n                    <div className=\"fs-6 fw-bold text-white truncate-overflow-1\">\n                        {name}\n                    </div>\n                    {Array.isArray(authors) && authors.length >= 1 && (\n                        <div className=\"d-flex\">\n                            {authors.map((aut, index) => {\n                                return (\n                                    <>\n                                        <Link\n                                            to={`/singer/${aut.slug}/${aut.id}`}\n                                            style={{\n                                                textTransform: \"capitalize\",\n                                            }}\n                                            className=\"gray-text text-decoration-none d-inline fw-normal truncate-overflow-1\"\n                                        >\n                                            {aut?.name}\n                                        </Link>\n                                        {authors.length > index + 1 && (\n                                            <span className=\"px-1\">,</span>\n                                        )}\n                                    </>\n                                );\n                            })}\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"col-3 d-none d-md-flex justify-content-center\">\n                {getReleaseTime()} days ago\n            </div>\n            <div className=\"col-2 d-flex justify-content-center\">\n                {getDurationTime()}\n            </div>\n        </div>\n    );\n}\n\nexport default TableItem;\n\n// // let created = new Date(song?.created);\n// let today = new Date();\n// let diff = today.getTime() - created.getTime();\n// let date = new Date(diff);\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport TableItem from \"../components/TableItem\";\nimport { get_genre, get_songs } from \"../redux/actions/main\";\n\nfunction MainGenre() {\n    const { slug, id } = useParams();\n    const [genre, setGenre] = useState(null);\n    const [songs, setSongs] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const dispatch = useDispatch();\n    const getGenre = () => {\n        setIsLoading(true);\n        dispatch(get_genre(slug, id)).then((result) => {\n            setGenre(result);\n            setIsLoading(false);\n        });\n    };\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\",\n        });\n        getGenre();\n    }, [slug, id]);\n    useEffect(() => {\n        if (genre) {\n            setIsLoading(true);\n            const filt = `genres=${genre?.id}&ordering=-updated&limit=50`;\n            dispatch(get_songs(filt)).then((res) => {\n                setSongs(res.results);\n                setIsLoading(false);\n            });\n        }\n    }, [genre]);\n    return (\n        <div className=\"container\">\n            <div className=\"h1 my-5 text-center truncate-overflow-2\">\n                {isLoading ? (\n                    <div class=\"spinner-border h6\" role=\"status\">\n                        <span class=\"visually-hidden\">Loading...</span>\n                    </div>\n                ) : (\n                    genre && genre.name\n                )}\n            </div>\n            <div className=\"container\">\n                <div\n                    className=\"row my-3 pb-3 align-items-center\"\n                    style={{\n                        color: \"#b3b3b3\",\n                        fontSize: \"13px\",\n                        letterSpacing: \"1px\",\n                        fontWeight: 600,\n                        borderBottom: \"1px solid rgba(255,255,255,.1)\",\n                    }}\n                >\n                    <div className=\"col-1 fs-6 d-flex justify-content-center\">\n                        #\n                    </div>\n                    <div className=\"col\">НАЗВАНИЕ</div>\n                    <div className=\"col-3 d-none d-md-flex justify-content-center\">\n                        ДАТА ДОБАВЛЕНИЯ\n                    </div>\n                    <div className=\"col-2 d-flex justify-content-center\">\n                        <i className=\"bi bi-clock fs-6\"></i>\n                    </div>\n                </div>\n                {Array.isArray(songs) &&\n                    songs.length >= 1 &&\n                    songs.map((song, index) => {\n                        return (\n                            <TableItem\n                                key={song?.id}\n                                id={song?.id}\n                                name={song?.name}\n                                duration={song?.duration}\n                                song_file={song.song_file}\n                                date={song.created}\n                                authors={song.singers}\n                            />\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n\nexport default MainGenre;\n"],"sourceRoot":""}